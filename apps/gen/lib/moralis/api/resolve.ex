# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Moralis.Api.Resolve do
  @moduledoc """
  API calls for all endpoints tagged `Resolve`.
  """

  alias Moralis.Connection
  import Moralis.RequestBuilder


  @doc """
  Return the ENS domain when available (Only for ETH)
  Resolves an ETH address and find the ENS name 

  ## Parameters

  - connection (Moralis.Connection): Connection to server
  - address (String.t): The address to be resolved
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, Moralis.Model.Ens.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec resolve_address(Tesla.Env.client, String.t, keyword()) :: {:ok, Moralis.Model.Ens.t} | {:error, Tesla.Env.t}
  def resolve_address(connection, address, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/resolve/#{address}/reverse")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Moralis.Model.Ens{}}
    ])
  end

  @doc """
  Resolves an Unstoppable domain and returns the address
  Resolves an Unstoppable domain and returns the address 

  ## Parameters

  - connection (Moralis.Connection): Connection to server
  - domain (String.t): Domain to be resolved
  - opts (KeywordList): [optional] Optional parameters
    - :currency (String.t): The currency to query
  ## Returns

  {:ok, Moralis.Model.Resolve.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec resolve_domain(Tesla.Env.client, String.t, keyword()) :: {:ok, Map.t} | {:ok, Moralis.Model.Resolve.t} | {:error, Tesla.Env.t}
  def resolve_domain(connection, domain, opts \\ []) do
    optional_params = %{
      :"currency" => :query
    }
    %{}
    |> method(:get)
    |> url("/resolve/#{domain}")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %Moralis.Model.Resolve{}},
      { 404, %{}}
    ])
  end
end
