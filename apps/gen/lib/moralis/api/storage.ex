# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Moralis.Api.Storage do
  @moduledoc """
  API calls for all endpoints tagged `Storage`.
  """

  alias Moralis.Connection
  import Moralis.RequestBuilder


  @doc """
  Uploads multiple files and place them in a folder directory
  Uploads multiple files and place them in a folder directory 

  ## Parameters

  - connection (Moralis.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body ([Moralis.Model.IpfsFileRequest.t]): Array of JSON and Base64 Supported
  ## Returns

  {:ok, [%IpfsFile{}, ...]} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec upload_folder(Tesla.Env.client, keyword()) :: {:ok, list(Moralis.Model.IpfsFile.t)} | {:error, Tesla.Env.t}
  def upload_folder(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/ipfs/uploadFolder")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, [%Moralis.Model.IpfsFile{}]}
    ])
  end
end
