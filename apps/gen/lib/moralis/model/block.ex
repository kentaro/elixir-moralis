# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule Moralis.Model.Block do
  @moduledoc """
  
  """

  @derive [Poison.Encoder]
  defstruct [
    :"timestamp",
    :"number",
    :"hash",
    :"parent_hash",
    :"nonce",
    :"sha3_uncles",
    :"logs_bloom",
    :"transactions_root",
    :"state_root",
    :"receipts_root",
    :"miner",
    :"difficulty",
    :"total_difficulty",
    :"size",
    :"extra_data",
    :"gas_limit",
    :"gas_used",
    :"transaction_count",
    :"transactions"
  ]

  @type t :: %__MODULE__{
    :"timestamp" => String.t,
    :"number" => String.t,
    :"hash" => String.t,
    :"parent_hash" => String.t,
    :"nonce" => String.t,
    :"sha3_uncles" => String.t,
    :"logs_bloom" => String.t,
    :"transactions_root" => String.t,
    :"state_root" => String.t,
    :"receipts_root" => String.t,
    :"miner" => String.t,
    :"difficulty" => String.t,
    :"total_difficulty" => String.t,
    :"size" => String.t,
    :"extra_data" => String.t,
    :"gas_limit" => String.t,
    :"gas_used" => String.t,
    :"transaction_count" => String.t,
    :"transactions" => [Moralis.Model.BlockTransaction.t]
  }
end

defimpl Poison.Decoder, for: Moralis.Model.Block do
  import Moralis.Deserializer
  def decode(value, options) do
    value
    |> deserialize(:"transactions", :list, Moralis.Model.BlockTransaction, options)
  end
end

